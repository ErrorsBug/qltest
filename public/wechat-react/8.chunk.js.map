{"version":3,"file":"8.chunk.js","sources":["webpack:///./wechat-react/components/page/index.js","webpack:///./wechat-react/mine/containers/user-info/index.js"],"sourcesContent":["import React, {\r\n    PureComponent, Fragment\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// import { getRouter } from '../../containers/app';\r\nimport Detect from '../detect';\r\n\r\n/**\r\n * 用于修改网页标题和 body class 等\r\n */\r\nclass Page extends PureComponent {\r\n\r\n    componentWillMount() {\r\n        // this.reconfigWx();\r\n        recordRouteHistory();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {title, cs, banpv=false, description, keyword} = this.props;\r\n        console.log(this.props)\r\n\r\n        this.setClass(cs);\r\n        this.setTitle(title);\r\n        this.setMeta('description', description)\r\n        this.setMeta('keyword', keyword)\r\n        if(!banpv) setTimeout(() => {\r\n            this.pvLog();\r\n        }, 0);\r\n\r\n    }\r\n\r\n    pvLog() {\r\n\r\n        // let router = getRouter();\r\n\r\n        // if (router && router.location && router.location.action === 'PUSH') {\r\n        typeof _qla != 'undefined' && _qla('pv', {\r\n\r\n        });\r\n        // }\r\n    }\r\n\r\n    reconfigWx() {\r\n        let wxConfig = document.querySelector('#wxConfig');\r\n        if (wxConfig) {\r\n            wxConfig.parentNode.removeChild(wxConfig);\r\n        }\r\n\r\n        const script = document.createElement('script');\r\n        script.id = 'wxConfig';\r\n        script.src = `/api/js-sdk/wx?actions=hide_all&${Date.now()}`;\r\n        document.body.appendChild(script);\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const {\r\n            title,\r\n            cs,\r\n            description,\r\n            keyword\r\n        } = this.props;\r\n        if (nextProps.title !== title) {\r\n            this.setTitle(nextProps.title)\r\n        }\r\n\r\n        if (nextProps.cs !== cs) {\r\n            this.setClass(nextProps.cs);\r\n        }\r\n\r\n        if (nextProps.description !== description) {\r\n            this.setMeta('description', nextProps.description)\r\n        }\r\n        if (nextProps.keyword !== keyword) {\r\n            this.setMeta('keyword', nextProps.keyword)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const {\r\n            title,\r\n            cs\r\n        } = this.props;\r\n\r\n        this.removeClass(cs);\r\n    }\r\n\r\n    setTitle(title) {\r\n        if (title) {\r\n            document.title = title;\r\n        }\r\n\r\n        // Magic iPhone 微信需要通过加载 iframe 来刷新 title\r\n        if (Detect.os.ios && Detect.os.weixin) {\r\n            var iframe = document.createElement(\"iframe\");\r\n            iframe.setAttribute(\"src\", \"/favicon.ico\");\r\n            iframe.style.display = 'none';\r\n            iframe.addEventListener('load', function() {\r\n                setTimeout(function() {\r\n                    //iframe.removeEventListener('load');\r\n                    document.body.removeChild(iframe);\r\n                }, 0);\r\n            });\r\n            document.body.appendChild(iframe);\r\n        }\r\n    }\r\n\r\n    setMeta (name, content) {\r\n        if (!name || !content) return\r\n        let meta = document.querySelector(`meta[name='${name}']`)\r\n        if (!meta) {\r\n            meta = document.createElement('meta');\r\n            document.getElementsByTagName('head')[0].appendChild(meta);\r\n        }\r\n        meta.content = content;\r\n        meta.name = name;\r\n    }\r\n\r\n    setClass(cs) {\r\n        if (cs) {\r\n            document.body.classList.add(cs);\r\n        }\r\n    }\r\n\r\n    removeClass(cs) {\r\n        if (cs) {\r\n            document.body.classList.remove(cs);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            component: Component,\r\n            cs,\r\n            title,\r\n            ...props\r\n        } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Component {...props} ref={el => (this.containerRef = el)}>\r\n                    {this.props.children}\r\n                </Component>\r\n                <div className=\"co-win-course-eval-container\"></div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nPage.propTypes = {\r\n    component: PropTypes.any,\r\n    title: PropTypes.string,\r\n    description: PropTypes.string,\r\n    keyword: PropTypes.string,\r\n    cs: PropTypes.string,\r\n}\r\n\r\nPage.defaultProps = {\r\n    component: 'div',\r\n    title: '',\r\n    description: '',\r\n    keyword: '',\r\n    cs: '',\r\n}\r\n\r\nexport default Page;\r\n\r\n\r\n\r\n/**\r\n * 记录页面路由到sessionStorage\r\n * 相同url只记录一次，最大记录长度为2\r\n * \r\n * ！！！切记获取上一页url时要用相对index，避免以后修改最大长度\r\n */\r\nexport function recordRouteHistory() {\r\n    if (typeof location !== 'undefined' && typeof sessionStorage !== 'undefined') {\r\n        try {\r\n            const key = 'ROUTE_HISTORY';\r\n\r\n            let routes = JSON.parse(sessionStorage.getItem(key));\r\n            routes instanceof Array || (routes = []);\r\n\r\n            if (routes[routes.length - 1] != location.href) {\r\n                routes.push(location.href);\r\n                if (routes.length > 2) routes.shift();\r\n    \r\n                sessionStorage.setItem(key, JSON.stringify(routes));\r\n            }\r\n        } catch (e) {\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport Page from 'components/page';\r\nimport { Confirm } from '@ql-feat/react-dialog';\r\nimport detect from 'components/detect';\r\nimport { request, insertOssSdk, uploadImage, unbindPhone, updateUserInfo, getUserInfoP } from 'common_actions/common';\r\nimport { imgUrlFormat, locationTo } from 'components/util';\r\n\r\n\r\nclass PageContainer extends Component {\r\n  state = {\r\n    _name: '',\r\n    _headImgUrl: '',\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getUserInfoP();\r\n  }\r\n\r\n  render() {\r\n    const { userInfo } = this.props;\r\n    if (!userInfo) return false;\r\n\r\n    return <Page title=\"编辑个人信息\" className=\"p-ls-mine-info\">\r\n      <div className=\"row-group\">\r\n        <div className=\"row subfield\" onClick={() => this.refAvatarModal.show()}>\r\n          头像\r\n          <div className=\"right\">\r\n            {\r\n              !!userInfo.headImgUrl &&\r\n              <img className=\"avatar\" src={imgUrlFormat(userInfo.headImgUrl, '?x-oss-process=image/resize,m_fill,limit_0,h_180,w_180')} alt=\"\"/>\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row subfield\" onClick={this.onClickEditName}>\r\n          名称\r\n          <div className=\"right\">\r\n            {userInfo.name}\r\n            <i className=\"icon_enter\"></i>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row subfield\">\r\n          ID\r\n          <div className=\"right\">\r\n            {userInfo.userId}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row subfield\" onClick={this.onClickBindPhone}>\r\n          绑定手机号\r\n          <div className=\"right\">\r\n            {\r\n              userInfo.isBind === 'Y'\r\n                ?\r\n                userInfo.mobile\r\n                :\r\n                <span style={{color: '#F73657'}}>未绑定</span>\r\n            }\r\n            <i className=\"icon_enter\"></i>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"row-group\">\r\n        <div className=\"row logout\" onClick={this.onClickLogout}>\r\n            退出登录\r\n        </div>\r\n      </div>\r\n\r\n      <Confirm\r\n        className=\"username-modal\"\r\n        title=\"名称\"\r\n        ref={r => this.refUsernameModal = r}\r\n        onBtnClick={this.onClickUsernameConfirm}\r\n      >\r\n        <input type=\"text\" placeholder=\"请输入名称,最多输入14个字\" ref={r => this.refUsername = r} value={this.state._name} onChange={this.onChangeName}/>\r\n      </Confirm>\r\n\r\n      <Confirm\r\n        className=\"avatar-modal\"\r\n        title=\"头像\"\r\n        ref={r => this.refAvatarModal = r}\r\n        onBtnClick={this.onClickAvatarConfirm}\r\n        onClose={() => this.setState({_headImgUrl: ''})}\r\n      >\r\n        <div className=\"upload-avatar-wrap\">\r\n          <img src={imgUrlFormat(this.state._headImgUrl || userInfo.headImgUrl, '?x-oss-process=image/resize,m_fill,limit_0,h_180,w_180')}/>\r\n          <div className=\"btn-upload-avatar\">点击上传图片</div>\r\n          <input\r\n            type=\"file\"\r\n            ref={r => this.refInputAvatar = r}\r\n            accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"\r\n            onChange={this.onChangeInputAvatar}\r\n          />\r\n        </div>\r\n      </Confirm>\r\n    </Page>\r\n  }\r\n\r\n  onClickBindPhone = () => {\r\n\t\tif (this.props.userInfo.isBind === 'Y') {\r\n\t\t\twindow.simpleDialog({\r\n\t\t\t\tmsg: `已经绑定手机号码${this.props.userInfo.mobile}，是否确认解除绑定?`,\r\n\t\t\t\tonConfirm: async () => {\r\n\t\t\t\t\tif (await this.props.unbindPhone()) {\r\n\t\t\t\t\t\twindow.toast('解绑成功');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tlocationTo('/wechat/page/phone-auth');\r\n\t\t}\r\n  }\r\n\r\n  onClickEditName = () => {\r\n    this.setState({\r\n      _name: this.props.userInfo.name\r\n    })\r\n    this.refUsernameModal.show();\r\n  }\r\n  \r\n  onChangeName = e => {\r\n    this.setState({\r\n      _name: e.target.value.trim()\r\n    })\r\n  }\r\n\r\n  onChangeInputAvatar = (e) => {\r\n    const file = e.target.files && e.target.files[0];\r\n    if (!file) return;\r\n    e.target.value = '';\r\n\r\n    window.loading(true);\r\n    insertOssSdk()\r\n      .then(() => this.props.uploadImage(file))\r\n      .then(_headImgUrl => {\r\n        if (!_headImgUrl) throw Error('上传图片失败');\r\n        this.setState({\r\n          _headImgUrl\r\n        })\r\n      })\r\n      .catch(err => {\r\n        window.toast(err.message);\r\n      })\r\n      .then(() => {\r\n        window.loading(false);\r\n      })\r\n  }\r\n\r\n  onClickAvatarConfirm = type => {\r\n    if (type === 'confirm') {\r\n      if (!this.state._headImgUrl) {\r\n        this.refAvatarModal.hide();\r\n        return;\r\n      }\r\n\r\n      window.loading(true);\r\n      request({\r\n        method: 'GET',\r\n        url: '/api/wechat/transfer/h5/user/updateInfo',\r\n        body: {\r\n          name: this.props.userInfo.name,\r\n          headImgUrl: this.state._headImgUrl, \r\n        }\r\n      }).then(res => {\r\n\r\n        window.toast(res.state.msg);\r\n        if (res.state.code == 0) {\r\n          this.props.updateUserInfo({\r\n            headImgUrl: this.state._headImgUrl,\r\n          })\r\n        }\r\n      }).catch(err => {\r\n        window.toast(err.message, 2000);\r\n        this.setState({\r\n          _headImgUrl: '',\r\n        })\r\n      }).then(() => {\r\n        window.loading(false);\r\n        this.refAvatarModal.hide();\r\n      })\r\n    } else {\r\n      this.setState({\r\n        _headImgUrl: '',\r\n      })\r\n    }\r\n  }\r\n\r\n  onClickUsernameConfirm = type => {\r\n    if (type === 'confirm') {\r\n      let name = this.refUsername.value.trim();\r\n      if (!name) return window.toast('请输入有效名称');\r\n      if (name.length > 14) return window.toast('名称不能超过14个字');\r\n\r\n      window.loading(true);\r\n      request({\r\n        method: 'POST',\r\n        url: '/api/wechat/transfer/h5/user/updateInfo',\r\n        body: {\r\n          name,\r\n          headImgUrl: this.props.userInfo.headImgUrl,\r\n        }\r\n      }).then(res => {\r\n        window.toast(res.state.msg);\r\n        if (res.state.code == 0) {\r\n          sessionStorage.removeItem(this.props.userInfo.userId);\r\n          this.props.updateUserInfo({\r\n            name\r\n          })\r\n        }\r\n      }).catch(err => {\r\n        window.toast(err.state.msg, 2000);\r\n      }).then(() => {\r\n        window.loading(false);\r\n        this.refUsernameModal.hide();\r\n      })\r\n    }\r\n  }\r\n\r\n  onClickLogout = () => {\r\n    simpleDialog({\r\n      msg: \"是否确定要退出当前帐号？\",\r\n      onConfirm: () => {\r\n        if (!detect.os.android && !detect.os.ios) {\r\n          locationTo('/loginOut.htm');\r\n        } else {\r\n          locationTo('/loginOut.htm?url='+ window.location.origin + encodeURIComponent('/wechat/page/wx-login/'));\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(state => {\r\n  return {\r\n    userInfo: state.common.userInfo.user || {},\r\n  }\r\n}, {\r\n  getUserInfoP,\r\n  uploadImage,\r\n  unbindPhone,\r\n  updateUserInfo,\r\n})(PageContainer);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;AAGA;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AAEA;AAEA;AACA;AAIA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAMA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAGA;;;;AAxIA;AACA;AA0IA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAIA;;;;;;;;;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;ACjMA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AA0FA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;;;;;;AA1NA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAIA;AAAA;AAEA;AAAA;AAKA;AAAA;AAAA;AAEA;AAAA;AAMA;AAAA;AAAA;AAAA;AAEA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AASA;;;;AA1FA;AACA;AAmOA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AACA;;;;;A","sourceRoot":""}