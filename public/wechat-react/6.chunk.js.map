{"version":3,"file":"6.chunk.js","sources":["webpack:///./wechat-react/components/app-sdk-hoc/index.js","webpack:///./wechat-react/components/app-sdk.js","webpack:///./wechat-react/mine/containers/enter-logout/index.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { isQlchat, isIOS, isAndroid } from 'components/envi'\r\nimport appSdk from 'components/app-sdk'\r\nimport { locationTo } from 'components/util'\r\n\r\n/**\r\n * 用于调用app(安卓、IOS)相关的方法\r\n * @param {*} WrappedComponent\r\n * @returns\r\n */\r\nconst HandleAppFunHoc = (WrappedComponent) => {\r\n    return class extends Component {\r\n        /**\r\n         * 调用IOS、安卓相关方法\r\n         * @param {string} event 方法名称\r\n         * @param {object} params 参数 \r\n         */\r\n        handleAppSdkFun = (event, params = {}) => {\r\n            if(isQlchat()){\r\n                const data = { ...params };\r\n                if(data.callback) {\r\n                    delete data.callback;\r\n                    delete data.success;\r\n                    delete data.fail;\r\n                }\r\n                if(isAndroid()){\r\n                    appSdk[event](data)\r\n                    // 安卓回调兼容\r\n                    appSdk.onSuccess('onSuccess', () => {\r\n                        params.callback && params.callback()\r\n                    })\r\n                }\r\n                if(isIOS()) {\r\n                    delete data.callback;\r\n                    window?.webkit?.messageHandlers[event].postMessage({ \r\n                        ...data,\r\n                        callBackEventName: `window.${ event }Call` // 触发函数名称\r\n                    })\r\n                    // IOS调用回调函数,触发函数\r\n                    window[event+'Call'] = function (responseData) {\r\n                        params.callback && params.callback(responseData)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // 用于安卓回调\r\n        onSuccess(event, cb) {\r\n            window?.WebViewJavascriptBridge?.registerHandler(event, function(data, responseCallback) {\r\n                cb();\r\n            });\r\n        }\r\n        // 处理app二级跳转\r\n        handleAppSecondary = (url, params = {}) => {\r\n            if(isQlchat()) {\r\n                if(!url.includes('https') && !url.includes('http')) {\r\n                    url = location.origin + url\r\n                }\r\n                if((isIOS() && !window?.webkit?.messageHandlers?.pushNativePage) || (isAndroid() && !appSdk.pushNativePage)) {\r\n                    locationTo(url)\r\n                } else {\r\n                    const obj = { entry: {\r\n                            \"target\": \"webpage\",\r\n                            \"webUrl\":url, \r\n                        }, ...params}\r\n                    this.handleAppSdkFun('pushNativePage', {\r\n                        ...obj\r\n                    })\r\n                }\r\n            } else { \r\n                locationTo(url)\r\n            }\r\n        }\r\n        render() {\r\n            return (\r\n                <WrappedComponent { ...this.props } \r\n                    onSuccess={ this.onSuccess } \r\n                    handleAppSdkFun={ this.handleAppSdkFun } \r\n                    handleAppSecondary={ this.handleAppSecondary } />\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default HandleAppFunHoc","var envi = require('./envi');\r\nvar urlutils = require('./url-utils');\r\n\r\nvar appSdk = {\r\n    /**\r\n     * 跳转到原生页面\r\n     * version: 2.0.0\r\n     * @Author   fisher<wangjiang.fly.1989@163.com>\r\n     * @DateTime 2016-11-16T11:25:57+0800\r\n     * @param    {[type]}                           url [description]\r\n     * @return   {[type]}                               [description]\r\n     */\r\n    linkTo: function (url, oriUrl) {\r\n        var protocol = 'qlchat://';\r\n        var link = protocol + url;\r\n        if (oriUrl) {\r\n            var search = new URL(oriUrl).search;\r\n            var shareKey = urlutils.getUrlParams('shareKey', search);\r\n            var lshareKey = urlutils.getUrlParams('lshareKey', search);\r\n\r\n            var newSearch = '';\r\n            shareKey && (newSearch += '&shareKey=' + shareKey);\r\n            lshareKey && (newSearch += '&lshareKey=' + lshareKey);\r\n\r\n            if (newSearch && /\\?.*(?=\\b|#)/.test(link)) {\r\n                newSearch && (link += newSearch)\r\n            } else {\r\n                newSearch && (link += '?' + newSearch.splice(1))\r\n            }\r\n        }\r\n        window.location.href = link;\r\n    },\r\n\r\n    /**\r\n     * 新webview打开页面\r\n     * @Author   fisher<wangjiang.fly.1989@163.com>\r\n     * @DateTime 2016-12-29T17:34:10+0800\r\n     * @param    {[type]}                           url [description]\r\n     * @return   {[type]}                               [description]\r\n     */\r\n    goWebPage: function (url) {\r\n        var ver = envi.getQlchatVersion();\r\n\r\n        if (ver && ver >= 210) {\r\n            if (url.indexOf('http') < 0) {\r\n                url = window.location.protocol + window.location.host + url;\r\n            }\r\n\r\n            this.linkTo('dl/webpage?url=' + encodeURIComponent(url));\r\n        } else {\r\n            window.location.href = url;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * app开启分享\r\n     * @Author   fisher<wangjiang.fly.1989@163.com>\r\n     * @DateTime 2017-02-27T17:22:19+0800\r\n     * @param    {[type]}                           opts [description]\r\n     * @return   {[type]}                                [description]\r\n     */\r\n    share: function(opts) {\r\n        opts = opts || {};\r\n\r\n        this.linkTo('dl/share/link?' +\r\n            'title=' + encodeURIComponent(opts.wxqltitle || '') +\r\n            '&content=' + encodeURIComponent(opts.descript || '') +\r\n            '&shareUrl=' + encodeURIComponent(opts.shareUrl || '') +\r\n            '&thumbImageUrl=' + encodeURIComponent(opts.wxqlimgurl || '')\r\n        );\r\n    },\r\n\r\n    ready: function() {\r\n        if (typeof qlchat != 'undefined' && typeof qlchat.ready === 'function') {\r\n            qlchat.ready(function() {});\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 支持回调的分享调起协议\r\n     * 支持版本：>= 3.6\r\n     * @param  {[type]} opts 分享的参数配置\r\n     *  opts: {\r\n     *  \ttype: 'link' 或 'image'    表示分享的类型为链接或图片，默认为'link'\r\n     *  \tcontent:   ''    要分享的链接或图片（可传base64), 在type为'link'时，默认取当前页地址。其它type时，该参数必传\r\n     *  \ttitle: 分享标题，不传默认为页面标题\r\n     *  \tdesc: 分享描述\r\n     *  \tthumbImage： 缩略图链接或者base64\r\n     *\r\n     *  }\r\n     * @return {[type]}      [description]\r\n     */\r\n    shareAndCallback: function(opts) {\r\n        if (typeof qlchat != 'undefined' && typeof qlchat.ready === 'function' && opts) {\r\n            opts = opts || {};\r\n\r\n            // 默认分享页面\r\n            opts.type = opts.type || 'link';\r\n\r\n            // 默认使用当前页面链接\r\n            if (!opts.content && opts.type === 'link') {\r\n                opts.content = window.location.href;\r\n            }\r\n\r\n            // 必要参数校验\r\n            if (!opts.content) {\r\n                throw Error('缺少分享配置参数: content');\r\n                return;\r\n            }\r\n\r\n            opts.title = opts.title || document.title;\r\n\r\n            console.log('share config:', opts);\r\n\r\n            qlchat.ready(() => {\r\n                qlchat.share({\r\n                \ttype: opts.type,       // \"link\" \"image\"\r\n                \tcontent: opts.content, // 根据 type 区别，如果是image可以传图片的链接或者 base64EncodedString，都需要进行 URLDecode\r\n                \ttitle: opts.title,\r\n                \tdesc: opts.desc || '',\r\n                \tthumbImage: opts.thumbImage || '',  // 缩略图，可以是图片的链接或者 base64EncodedString，都需要进行 URLDecode\r\n                    success: opts.success || ((res) => {}),  // 成功回调\r\n                    fail: opts.fail || ((err) => {console.error(err)}),        // 失败回调\r\n                });\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 分享配置，用于app三个点调起的分享初始化\r\n     * 支持版本：>= 3.6\r\n     * @param  {[type]} opts [description]\r\n     * @return {[type]}      [description]\r\n     */\r\n    shareConfig: function(opts) {\r\n        if (typeof qlchat != 'undefined' && opts) {\r\n            opts = opts || {};\r\n\r\n            // 默认分享页面\r\n            opts.type = opts.type || 'link';\r\n\r\n            // 默认使用当前页面链接\r\n            if (!opts.content && opts.type === 'link') {\r\n                opts.content = window.location.href;\r\n            }\r\n\r\n            // 必要参数校验\r\n            if (!opts.content) {\r\n                throw Error('缺少分享配置参数: content');\r\n                return;\r\n            }\r\n\r\n            opts.title = opts.title || document.title;\r\n\r\n            console.log('share config:', opts);\r\n\r\n            var shareConfig = {\r\n            \ttype: opts.type,       // \"link\" \"image\"\r\n            \tcontent: opts.content, // 根据 type 区别，如果是image可以传图片的链接或者 base64EncodedString，都需要进行 URLDecode\r\n            \ttitle: opts.title,\r\n            \tdesc: opts.desc || '',\r\n            \tthumbImage: opts.thumbImage || '',  // 缩略图，可以是图片的链接或者 base64EncodedString，都需要进行 URLDecode\r\n                success: opts.success || ((res) => {}),  // 成功回调\r\n                fail: opts.fail || ((err) => {console.error(err)}),        // 失败回调\r\n            };\r\n\r\n            qlchat.ready(() => {\r\n                // Todo 还没有支持分享到哪里的定制，默认全部配置\r\n                if (qlchat.onMenuShareWeChatTimeline) {\r\n                    qlchat.onMenuShareWeChatTimeline(shareConfig);\r\n                }\r\n\r\n                if (qlchat.onMenuShareWeChatFriends) {\r\n                    qlchat.onMenuShareWeChatFriends(shareConfig);\r\n                }\r\n\r\n                if (qlchat.onMenuShareWeibo) {\r\n                    qlchat.onMenuShareWeibo(shareConfig);\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * app支付封装\r\n     * 支持版本：>= 3.6\r\n     * @param  {[type]} params 支付传参。具体参数参考app支付接口文档\r\n     * @return {[type]}        [description]\r\n     */\r\n    pay: function(params) {\r\n        // console.log('pay params: ', params);\r\n        if (typeof qlchat != 'undefined' && typeof qlchat.ready === 'function' && params) {\r\n            qlchat.ready(() => {\r\n                qlchat.pay(params || {})\r\n            });\r\n        }\r\n    },\r\n    /**\r\n     * 用于页面加载完成，  获取整个页面HTML\r\n     */\r\n    onLoadedHtml: function(params) {\r\n        \r\n        if (typeof qlchat != 'undefined' && typeof qlchat.ready === 'function') {\r\n            qlchat.ready(() => {\r\n                qlchat.onLoadedHtml(params || '')\r\n            });\r\n        }\r\n    },\r\n    /**\r\n     * 保存图片\r\n     * @param {*} url \r\n     */\r\n    saveImage: function(params) {\r\n        // alert(JSON.stringify(params))\r\n        if (typeof qlchat != 'undefined' && typeof qlchat.ready === 'function' && params) {\r\n            qlchat.ready(() => {\r\n                qlchat.saveImage(params)\r\n            });\r\n        }\r\n    },\r\n    /**\r\n     * 分享图片到微信\r\n     * @param {*} params \r\n     */\r\n    shareImageToWeChat: function(params) {\r\n        if (typeof qlchat != 'undefined' && typeof qlchat.ready === 'function') {\r\n            qlchat.ready(() => {\r\n                qlchat.shareImageToWeChat(params || '')\r\n            });\r\n        }\r\n    },\r\n    /**\r\n     * 分享图片到微信朋友圈\r\n     * @param {*} params \r\n     */\r\n    shareImageToWeChatCircle: function(params) {\r\n        if (typeof qlchat != 'undefined' && typeof qlchat.ready === 'function') {\r\n            qlchat.ready(() => {\r\n                qlchat.shareImageToWeChatCircle(params || '')\r\n            });\r\n        }\r\n    },\r\n    /**\r\n     * 一次性订阅\r\n     * @param {*} params \r\n     */\r\n    sendSubscribeMessage: function(params) {\r\n        if (typeof qlchat != 'undefined' && typeof qlchat.ready === 'function' && params) {\r\n            qlchat.ready(() => {\r\n                qlchat.sendSubscribeMessage(params || '')\r\n            });\r\n        }\r\n    },\r\n    /**\r\n     * 跳转app原生页面\r\n     * @param {*} params \r\n     */\r\n    callNativeView: function(params) {\r\n        if (typeof qlchat != 'undefined' && typeof qlchat.ready === 'function' && params) {\r\n            qlchat.ready(() => {\r\n                qlchat.callNativeView(params || '')\r\n            });\r\n        }\r\n    },\r\n    /**\r\n     * 女子大学补卡支付调用 安卓\r\n     * @param {*} params \r\n     */\r\n    resign:function(params) {\r\n        if (typeof qlchat != 'undefined' && typeof qlchat.ready === 'function' && params) {\r\n            qlchat.ready(() => {\r\n                qlchat.resign(params || '')\r\n            });\r\n        }\r\n    },\r\n    /**\r\n     * 体验营支付 app\r\n     * @param {*} params \r\n     */\r\n    commonOrder: function(params) {\r\n        if (typeof qlchat != 'undefined' && typeof qlchat.ready === 'function' && params) {\r\n            qlchat.ready(() => {\r\n                qlchat.commonOrder(params || '')\r\n            });\r\n        }\r\n    },\r\n    /**\r\n     * 体验营支付后一次性订阅 app\r\n     * @param {*} params \r\n     */\r\n    commonSubscribeMessage: function(params) {\r\n        if (typeof qlchat != 'undefined' && typeof qlchat.ready === 'function' && params) {\r\n            qlchat.ready(() => {\r\n                qlchat.commonSubscribeMessage(params || '')\r\n            });\r\n        }\r\n    },\r\n    /**\r\n     * 表单采集提交\r\n     * @param {*} params \r\n     */\r\n    checkFormAction:function(params) {\r\n        if (typeof qlchat != 'undefined' && typeof qlchat.ready === 'function' && params) {\r\n            qlchat.ready(() => {\r\n                qlchat.checkFormAction(params || '')\r\n            });\r\n        }\r\n    },\r\n    /**\r\n     * 全新app跳转方式（开启APP二级页面）\r\n     * @param {*} params \r\n     */\r\n    pushNativePage:function(params) {\r\n        if (typeof qlchat != 'undefined' && typeof qlchat.ready === 'function' && params) {\r\n            qlchat.ready(() => {\r\n                qlchat.pushNativePage(params || '')\r\n            });\r\n        }\r\n    },\r\n    /**\r\n     * 退出当前页面\r\n     * @param {*} params \r\n     */\r\n    popPage:function(params) {\r\n        if (typeof qlchat != 'undefined' && typeof qlchat.ready === 'function' && params) {\r\n            qlchat.ready(() => {\r\n                qlchat.popPage(params || '')\r\n            });\r\n        }\r\n    },\r\n    /**\r\n     * 退出登录\r\n     * @param {*} params \r\n     */\r\n    logoutAction:function(params) {\r\n        if (typeof qlchat != 'undefined' && typeof qlchat.ready === 'function' && params) {\r\n            qlchat.ready(() => {\r\n                qlchat.logoutAction(params || '')\r\n            });\r\n        }\r\n    },\r\n};\r\n\r\nexport default appSdk;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { autobind } from 'core-decorators';\r\nimport { cancelId } from '../../actions/camp'\r\nimport HandleAppFunHoc from 'components/app-sdk-hoc'\r\nimport Page from 'components/page';\r\n\r\n\r\n@HandleAppFunHoc\r\n@autobind\r\nclass EnterLogout extends Component {\r\n  state = {\r\n    enterBox:false\r\n  }\r\n  //确认注销和取消按钮\r\n  enterLogoutBtn = (val) => {\r\n    let enterBox = val\r\n    this.setState({\r\n      enterBox\r\n    })\r\n  }\r\n  //调用 & 放弃\r\n  giveUp = () => {\r\n    this.props.handleAppSdkFun('popPage',{})\r\n  }\r\n  //调用 & 确认按钮\r\n  enter = async () => {\r\n    const res = await cancelId()\r\n    if ( res.state.code == 0 ) {\r\n      this.props.handleAppSdkFun('logoutAction',{})\r\n    }\r\n  }\r\n  render() {\r\n    const {enterBox} = this.state\r\n    return (\r\n        <Page title=\"确认注销\" className=\"enter-logout\">\r\n          <div className=\"enter-logout-box\">\r\n            <div className=\"title\">\r\n                <p>确认注销</p>\r\n            </div>\r\n            <div className=\"enter-logout-content\">\r\n                <p>为防止误操作，广州沐思信息科技有限公司及关联公司（以下简称“我们”）深知个人信息对您的重要性，我们将按法律法规和业界成熟的安全标准，采取相应的安全保护措施，</p>\r\n            </div>\r\n            <div className=\"buttom\">\r\n                <div className=\"enter-logout-bottom\">\r\n                    <p onClick={this.enterLogoutBtn.bind(this,true)}>确认注销</p>\r\n                </div>\r\n                <div className=\"give-up\">\r\n                    <p onClick={this.giveUp}>放弃</p>\r\n                </div>\r\n            </div>\r\n            { enterBox &&\r\n                <div className=\"logout-pop-up\" >\r\n                <div className=\"pop-up\">\r\n                  <p className=\"pop-up-title\">注销账号</p>\r\n                  <p className=\"enter-title\">确认注销吗？</p>\r\n                  <button className=\"cancel\" onClick={this.enterLogoutBtn.bind(this,false)}>取消</button>\r\n                  <button className=\"enter\" onClick={this.enter}>确认</button>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n        </Page>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function(state) {\r\n\r\n};\r\n\r\nconst mapActionToProps = {\r\n\r\n};\r\n\r\nmodule.exports = connect(mapStateToProps, mapActionToProps)(EnterLogout);"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAMA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAyCA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AA7DA;AAAA;AACA;AADA;AAAA;AAkCA;AAlCA;AAmCA;AACA;AAAA;AACA;AACA;AACA;AACA;AAxCA;AAAA;AAAA;AA8DA;AAEA;AACA;AACA;AAHA;AAKA;AApEA;AACA;AADA;AAAA;AAAA;AAsEA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;AClFA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AAEA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AARA;AASA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAjVA;AAoVA;;;;;;;;;;;;;;;ACvVA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAKA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAOA;;;;AAtDA;AACA;AAwDA;AACA;AAGA;AAIA;;;;A","sourceRoot":""}