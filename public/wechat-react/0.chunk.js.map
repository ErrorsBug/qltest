{"version":3,"file":"0.chunk.js","sources":["webpack:///./wechat-react/components/empty-page/index.js","webpack:///./wechat-react/components/page/index.js","webpack:///./wechat-react/components/scrollToLoad/index.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\n\r\n/**\r\n * 20181226重构 jiajun.li\r\n * \r\n * 之前是用emptyPicIndex（number）指定图片的，0时无效的\r\n * \r\n * 现增加语义化名称指定图片，参数为imgKey（string）\r\n */\r\n\r\nconst emptyImgMap = {\r\n    1: 'https://img.qlchat.com/qlLive/liveCommon/empty-pic-1-1.png',//珊瑚计划数据的空页面icon\r\n    2: 'https://img.qlchat.com/qlLive/liveCommon/empty-pic-2.png',   //珊瑚计划收益相关列表空页面icon  \r\n    3: 'https://img.qlchat.com/qlLive/media-market/no-content.png', // 媒体商城空列表图标\r\n\r\n    default: '//img.qlchat.com/qlLive/liveCommon/empty-page-empty.png',\r\n    noCourse: '//img.qlchat.com/qlLive/liveCommon/empty-page-no-course.png',\r\n    noContent: '//img.qlchat.com/qlLive/liveCommon/empty-page-no-content.png',\r\n    noCoupon: '//img.qlchat.com/qlLive/liveCommon/empty-page-no-coupon.png',\r\n};\r\n\r\n\r\nclass Empty extends React.PureComponent {\r\n    render() {\r\n        const props = this.props;\r\n        const cln = classNames(props.mini ? 'common-empty-m' : 'common-empty', this.props.className);\r\n\r\n        let imgSrc = props.emptyPic || emptyImgMap[props.emptyPicIndex] || emptyImgMap[props.imgKey] || emptyImgMap.default;\r\n\r\n        return (\r\n            <div className={cln}>\r\n                {\r\n                    !props.hideNoMorePic&&\r\n                    <div className=\"co-empty-box\">\r\n                        <img className=\"co-empty-img\" src={imgSrc} />\r\n                    </div>\r\n                }\r\n                <div className=\"co-empty-desc\">{props.emptyMessage||'没有任何内容哦'}</div>\r\n\r\n                {\r\n                    typeof props.footer === 'function' ? props.footer() : props.footer\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nEmpty.propTypes = {\r\n    //空页面icon自定义参数，\r\n    emptyPicIndex: PropTypes.number,  \r\n    //空页面自定义文案 \r\n    emptyMessage: PropTypes.string,\r\n\r\n    hideNoMorePic : PropTypes.bool,\r\n\r\n    mini: PropTypes.bool, // 小型空样式，static定位\r\n\r\n    imgKey: PropTypes.string, // 指定图片\r\n};\r\n\r\nexport default Empty;\r\n","import React, {\r\n    PureComponent, Fragment\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// import { getRouter } from '../../containers/app';\r\nimport Detect from '../detect';\r\n\r\n/**\r\n * 用于修改网页标题和 body class 等\r\n */\r\nclass Page extends PureComponent {\r\n\r\n    componentWillMount() {\r\n        // this.reconfigWx();\r\n        recordRouteHistory();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {title, cs, banpv=false, description, keyword} = this.props;\r\n        console.log(this.props)\r\n\r\n        this.setClass(cs);\r\n        this.setTitle(title);\r\n        this.setMeta('description', description)\r\n        this.setMeta('keyword', keyword)\r\n        if(!banpv) setTimeout(() => {\r\n            this.pvLog();\r\n        }, 0);\r\n\r\n    }\r\n\r\n    pvLog() {\r\n\r\n        // let router = getRouter();\r\n\r\n        // if (router && router.location && router.location.action === 'PUSH') {\r\n        typeof _qla != 'undefined' && _qla('pv', {\r\n\r\n        });\r\n        // }\r\n    }\r\n\r\n    reconfigWx() {\r\n        let wxConfig = document.querySelector('#wxConfig');\r\n        if (wxConfig) {\r\n            wxConfig.parentNode.removeChild(wxConfig);\r\n        }\r\n\r\n        const script = document.createElement('script');\r\n        script.id = 'wxConfig';\r\n        script.src = `/api/js-sdk/wx?actions=hide_all&${Date.now()}`;\r\n        document.body.appendChild(script);\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const {\r\n            title,\r\n            cs,\r\n            description,\r\n            keyword\r\n        } = this.props;\r\n        if (nextProps.title !== title) {\r\n            this.setTitle(nextProps.title)\r\n        }\r\n\r\n        if (nextProps.cs !== cs) {\r\n            this.setClass(nextProps.cs);\r\n        }\r\n\r\n        if (nextProps.description !== description) {\r\n            this.setMeta('description', nextProps.description)\r\n        }\r\n        if (nextProps.keyword !== keyword) {\r\n            this.setMeta('keyword', nextProps.keyword)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const {\r\n            title,\r\n            cs\r\n        } = this.props;\r\n\r\n        this.removeClass(cs);\r\n    }\r\n\r\n    setTitle(title) {\r\n        if (title) {\r\n            document.title = title;\r\n        }\r\n\r\n        // Magic iPhone 微信需要通过加载 iframe 来刷新 title\r\n        if (Detect.os.ios && Detect.os.weixin) {\r\n            var iframe = document.createElement(\"iframe\");\r\n            iframe.setAttribute(\"src\", \"/favicon.ico\");\r\n            iframe.style.display = 'none';\r\n            iframe.addEventListener('load', function() {\r\n                setTimeout(function() {\r\n                    //iframe.removeEventListener('load');\r\n                    document.body.removeChild(iframe);\r\n                }, 0);\r\n            });\r\n            document.body.appendChild(iframe);\r\n        }\r\n    }\r\n\r\n    setMeta (name, content) {\r\n        if (!name || !content) return\r\n        let meta = document.querySelector(`meta[name='${name}']`)\r\n        if (!meta) {\r\n            meta = document.createElement('meta');\r\n            document.getElementsByTagName('head')[0].appendChild(meta);\r\n        }\r\n        meta.content = content;\r\n        meta.name = name;\r\n    }\r\n\r\n    setClass(cs) {\r\n        if (cs) {\r\n            document.body.classList.add(cs);\r\n        }\r\n    }\r\n\r\n    removeClass(cs) {\r\n        if (cs) {\r\n            document.body.classList.remove(cs);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            component: Component,\r\n            cs,\r\n            title,\r\n            ...props\r\n        } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Component {...props} ref={el => (this.containerRef = el)}>\r\n                    {this.props.children}\r\n                </Component>\r\n                <div className=\"co-win-course-eval-container\"></div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nPage.propTypes = {\r\n    component: PropTypes.any,\r\n    title: PropTypes.string,\r\n    description: PropTypes.string,\r\n    keyword: PropTypes.string,\r\n    cs: PropTypes.string,\r\n}\r\n\r\nPage.defaultProps = {\r\n    component: 'div',\r\n    title: '',\r\n    description: '',\r\n    keyword: '',\r\n    cs: '',\r\n}\r\n\r\nexport default Page;\r\n\r\n\r\n\r\n/**\r\n * 记录页面路由到sessionStorage\r\n * 相同url只记录一次，最大记录长度为2\r\n * \r\n * ！！！切记获取上一页url时要用相对index，避免以后修改最大长度\r\n */\r\nexport function recordRouteHistory() {\r\n    if (typeof location !== 'undefined' && typeof sessionStorage !== 'undefined') {\r\n        try {\r\n            const key = 'ROUTE_HISTORY';\r\n\r\n            let routes = JSON.parse(sessionStorage.getItem(key));\r\n            routes instanceof Array || (routes = []);\r\n\r\n            if (routes[routes.length - 1] != location.href) {\r\n                routes.push(location.href);\r\n                if (routes.length > 2) routes.shift();\r\n    \r\n                sessionStorage.setItem(key, JSON.stringify(routes));\r\n            }\r\n        } catch (e) {\r\n        }\r\n    }\r\n}","\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nimport Empty from '../empty-page';\r\n\r\n\r\nclass ScrollToLoad extends Component {\r\n\r\n    state = {\r\n        loading: false,\r\n        noMore: this.props.noMore,\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            noMore: nextProps.noMore,\r\n        })\r\n    }\r\n\r\n    onScroll(e) {\r\n        if (this.props.disable) return;\r\n\r\n        const {\r\n            toBottomHeight,\r\n            className,\r\n            loadNext = () => {},\r\n        } = this.props;\r\n\r\n        const event = e || window.event;\r\n        const el = event.target;\r\n\r\n        let distanceScrollCount = el.scrollHeight,\r\n            distanceScroll = el.scrollTop,\r\n            topicPageHight = el.clientHeight,\r\n            ddt = distanceScrollCount - distanceScroll - topicPageHight,\r\n            defaultToBottomHeight = 3;\r\n\r\n        const scrollContainerBoundingRect = this.scrollContainer.getBoundingClientRect();\r\n\r\n        //在滚动的时候自定义操作\r\n        /**\r\n         * @param e 事件对象\r\n         * @param distanceScroll 滚动的距离\r\n         * @param distanceScrollCount 总高度\r\n         * @param scrollHeight 节点的滚动高度\r\n         * 在判断是否正在加载和是否无更多数据之前执行的原因是\r\n         * 在无更多数据不做加载操作还能做自定义的操作\r\n         */\r\n        if (this.props.scrollToDo) {\r\n            this.props.scrollToDo(e, distanceScroll, topicPageHight, distanceScrollCount, scrollContainerBoundingRect);\r\n        }\r\n\r\n        // 添加noneOne的判断\r\n        if (this.state.loading || this.state.noMore || this.props.noneOne) {\r\n            return;\r\n        }\r\n\r\n        \r\n\r\n        // 防止事件冒泡（子元素横向滚动也会触发onscroll事件）\r\n        if (Array.prototype.join.call(el.classList, ',').indexOf('co-scroll-to-load') < 0) {\r\n            return;\r\n        }\r\n\r\n        \r\n\r\n        if (toBottomHeight) {\r\n            defaultToBottomHeight = toBottomHeight;\r\n        }\r\n\r\n        if (ddt < defaultToBottomHeight) {\r\n            this.setState({\r\n                loading: true,\r\n            });\r\n\r\n            loadNext(() => {\r\n                this.setState({\r\n                    loading: false,\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    disableScroll(e){\r\n        if (this.props.disableScroll) {\r\n            e.preventDefault();\r\n        }\r\n        if (this.props.onTouchMove) {\r\n            this.props.onTouchMove(e);\r\n        }\r\n    }\r\n\r\n    getBoundingClientRect(){\r\n        return this.scrollContainer.getBoundingClientRect()\r\n    }\r\n\r\n    get scrollHeight(){\r\n        return this.scrollContainer.scrollHeight;\r\n    }\r\n\r\n    get scrollTop(){\r\n        return this.scrollContainer.scrollTop;\r\n    }\r\n\r\n    set scrollTop(value){\r\n        this.scrollContainer.scrollTop = value;\r\n    }\r\n\r\n    render() {\r\n        var emptyDiv='';\r\n        return (\r\n            <div\r\n                id={this.props.id || ''}\r\n                className={classnames('co-scroll-to-load', this.props.className)}\r\n                style={ this.props.style || {} }\r\n                onScroll={this.onScroll.bind(this)}\r\n                onTouchMove={this.disableScroll.bind(this)}\r\n                onWheel={this.disableScroll.bind(this)}\r\n                ref={el => (this.scrollContainer = el)}\r\n            >\r\n                <main>\r\n                    { this.props.children }\r\n                </main>\r\n\r\n                { !this.props.disable && this.state.loading && <div className='list-loading'>拼命加载中.<div className=\"dynamic-ellipsis\">..</div></div> }\r\n                { !this.props.disable && this.state.noMore && !this.props.notShowLoaded && !this.props.noneOne && <div className='list-nomore'>没有更多了</div> }\r\n                { !this.props.disable && this.state.noMore && !this.props.notShowLoaded && this.props.bottomText !== null && <div className='list-nomore'>{this.props.bottomText}</div> }\r\n                {!this.props.disable && this.props.noneOne && !this.props.notShowLoaded && <div className='list-nomore'>\r\n                    <Empty show={true}\r\n                           emptyPic={this.props.emptyPic || ''}\r\n                           emptyPicIndex={this.props.emptyPicIndex||0}\r\n                           emptyMessage={this.props.emptyMessage||''}\r\n                           hideNoMorePic={this.props.hideNoMorePic}\r\n                    />\r\n                    {/* emptyPicIndex 空页面icon自定义参数， emptyMessage  空页面自定义文案    */}\r\n                </div> }\r\n                { (!(!this.props.disable && this.state.loading) && !(!this.props.disable && this.state.noMore && !this.props.notShowLoaded)) && this.props.footer && <div className='need-space'></div> }\r\n\r\n                { this.props.footer && this.props.footer }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nScrollToLoad.propTypes = {\r\n\r\n    // 滚动触发者，默认是id为app的元素\r\n    // trigger: PropTypes.string,\r\n\r\n    disable: PropTypes.bool,\r\n\r\n    // 滚动到底部时调用\r\n    loadNext: PropTypes.func,\r\n\r\n    // 距离底部多少时触发\r\n    toBottomHeight: PropTypes.number,\r\n\r\n    // 是否还有更多\r\n    noMore: PropTypes.bool,\r\n\r\n    //第几页\r\n    page:PropTypes.number,\r\n\r\n    //是否暂无数据\r\n    noneOne: PropTypes.bool,\r\n\t//空页面icon\r\n\temptyPic: PropTypes.string,\r\n    //空页面icon自定义参数，\r\n    emptyPicIndex: PropTypes.number,  \r\n    //空页面自定义文案 \r\n    emptyMessage: PropTypes.string,\r\n\r\n    hideNoMorePic: PropTypes.bool,\r\n\r\n    className: PropTypes.string,\r\n\r\n    notShowLoaded: PropTypes.bool,\r\n    // 滚动事件自定义操作函数\r\n    scrollToDo: PropTypes.func,\r\n\r\n    // 是否禁用滚动\r\n    disableScroll: PropTypes.bool,\r\n    // 底部自定义文案\r\n    bottomText: PropTypes.string,\r\n};\r\n\r\nScrollToLoad.defaultProps = {\r\n    disable: false,\r\n    disableScroll: false,\r\n    bottomText: null,\r\n}\r\n\r\nexport default ScrollToLoad;\r\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;AAQA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AARA;AACA;AAWA;;;;;;;;;;;;;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAOA;;;;AAtBA;AACA;AAwBA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AAXA;AAaA;;;;;;;;;;;;;;;;;;;;;AC/DA;AACA;AAEA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;AAGA;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AAEA;AAEA;AACA;AAIA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAMA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAGA;;;;AAxIA;AACA;AA0IA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAIA;;;;;;;;;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;AChMA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AACA;;;;;;AAIA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAEA;;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAcA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAPA;AAaA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAQA;AAAA;AAMA;;;AA9CA;AACA;AACA;;;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;AApGA;AACA;AA0IA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAvCA;AA0CA;AACA;AACA;AACA;AAHA;AAMA;;;;;A","sourceRoot":""}