{"version":3,"file":"7.chunk.js","sources":["webpack:///./wechat-react/components/books-item/index.jsx","webpack:///./wechat-react/mine/containers/buy-history/components/tab/index.jsx","webpack:///./wechat-react/mine/containers/buy-history/index.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport Picture from 'ql-react-picture'\r\nimport { autobind } from 'core-decorators'\r\nimport classnames from 'classnames'\r\nimport { getAudioTimeShow, digitFormat, locationTo } from 'components/util'\r\n\r\n@autobind\r\nexport default class Index extends Component {\r\n  state = {  }\r\n  goTopic(e){\r\n    e.stopPropagation()\r\n    locationTo(`/wechat/page/topic-intro?topicId=${ this.props.id }`)\r\n  }\r\n  render() {\r\n    const { flag=true,name,description,iconUrl,duration,learningNum } = this.props; \r\n    const cls = classnames({\r\n      'books-name': !flag\r\n    })\r\n    return (\r\n      <div className=\"books-topic-item\" onClick={ this.goTopic }>\r\n        <div className=\"books-img\">\r\n            <Picture className=\"books-pic\" src={ iconUrl } placeholder={true} resize={{w:'162',h:\"207\"}} />\r\n        </div>\r\n        <div className=\"books-intro\">\r\n          <div>\r\n              <h3 className={ cls }>{name}</h3>\r\n              { flag && <p>{ description }</p> }\r\n              <div className=\"books-decs\">{ digitFormat(learningNum) }次学习 | 时长{ getAudioTimeShow(duration) }</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { findDOMNode } from 'react-dom';\r\n\r\nexport default class TabLabel extends Component {\r\n    static propTypes = {\r\n        // 数组中的元素为{labelName: '', sign: '一个标识的内容', belongParentIndex: 上级标签的位置(子集标签才有)}\r\n        listInfo: PropTypes.array,\r\n        // li节点类名\r\n        liClassName: PropTypes.string,\r\n        // section节点类\r\n        sectionClassName: PropTypes.string,\r\n        // ul节点类\r\n        ulClassName: PropTypes.string,\r\n        // 点击处理\r\n        labelClickFunc: PropTypes.func,\r\n        // 是否收起\r\n        isPickedUp: PropTypes.bool,\r\n        // activeLabelSign: 当前激活标签的对应标记\r\n        // 是否要点击标签自动移动到中间\r\n        useAutoCenter: PropTypes.bool,\r\n    }\r\n    static defaultProps = {\r\n        listInfo: [],\r\n        liClassName: '',\r\n        sectionClassName: '',\r\n        ulClassName: '',\r\n        isPickedUp: false,\r\n        useAutoCenter: true,\r\n    }\r\n    data = {\r\n        menuScrollLeftTimer: null,\r\n        firstScrollCenter: true, // 第一次\r\n        didMount: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.data.didMount = true;\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.data.didMount && this.data.firstScrollCenter && this.props.useAutoCenter) {\r\n            if (this.refs.categorys.children.length > 0) {\r\n                this.data.firstScrollCenter = false;\r\n                this.activeItemScrollToCenter(nextProps.activeLabelSign);\r\n            }\r\n        }\r\n    }\r\n\r\n    switchLabel(e, sign, belongParentIndex) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        if (this.props.useAutoCenter) {\r\n            this.handelItemClick(sign, e);\r\n        }\r\n\r\n        // 处理父级函数\r\n        this.props.labelClickFunc(sign, belongParentIndex);\r\n    }\r\n\r\n    handelItemClick(sign, e) {\r\n\r\n        if (sign === this.props.activeLabelSign) {\r\n            return;\r\n        }\r\n\r\n        this.activeItemScrollToCenter(sign);\r\n    }\r\n\r\n    // 滑动激活元素到中间位置\r\n    activeItemScrollToCenter(activeSign) {\r\n        let menuDom = findDOMNode(this.refs.categorys);\r\n        let disToLeft = 0;\r\n\r\n        for (let i = 0, len = menuDom.children.length; i < len; i++) {\r\n            let itemDom = menuDom.children[i];\r\n            disToLeft += itemDom.offsetWidth || 0;\r\n\r\n            if (('' + itemDom.getAttribute('data-sign')) === ('' + activeSign)) {\r\n                disToLeft -= (itemDom.offsetWidth / 2);\r\n                break;\r\n            }\r\n        }\r\n\r\n        disToLeft = disToLeft - findDOMNode(this.refs.categoryMenu).offsetWidth / 2;\r\n\r\n        this.menuScrollTo(disToLeft);\r\n    }\r\n\r\n    // 将menu滑动一段距离\r\n    menuScrollTo(dis) {\r\n        let menuDom = findDOMNode(this.refs.categorys);\r\n        let scrollLeft = menuDom.scrollLeft;\r\n\r\n        // 设置计时器\r\n        this.data.menuScrollLeftTimer && clearInterval(this.data.menuScrollLeftTimer);\r\n        this.data.menuScrollLeftTimer = setInterval(() => {\r\n            // 设置速度，用等式而不用具体数值是为了产生缓动效果；\r\n            scrollLeft = scrollLeft + Math.ceil((dis - scrollLeft) / 3);\r\n\r\n            // 作差，产生缓动效果；\r\n            menuDom.scrollLeft = scrollLeft;\r\n\r\n            // 判断是否抵达顶部，若是，停止计时器；\r\n            if (Math.abs(dis - scrollLeft) <= 4) {\r\n                menuDom.scrollLeft = dis;\r\n                clearInterval(this.data.menuScrollLeftTimer);\r\n            }\r\n        }, 60);\r\n    }\r\n    render() {\r\n        var liDOM = null;\r\n        if (this.props.listInfo instanceof Array) {\r\n            liDOM = this.props.listInfo.map((item, index) => {\r\n                return (\r\n                    <li\r\n                        className={classnames('on-log', this.props.liClassName, 'label-item', {active: this.props.activeLabelSign == item.sign})}\r\n                        key={`olabel${index}`}\r\n                        data-sign={item.sign}\r\n                        onClick={(e) => {this.switchLabel(e, item.sign, item.belongParentIndex)}}\r\n                        data-id={item.sign}\r\n                        data-log-region={this.props.region}\r\n                        data-log-tag_id={item.sign}\r\n                        data-log-tag_name={item.labelName}\r\n                        data-log-business_id={item.sign}\r\n                        data-log-name={item.labelName}\r\n                        data-log-business_type={'tag'}\r\n                        >\r\n                        <span className=\"label-item-link\">\r\n                            {item.labelName}\r\n                        </span>\r\n                    </li>\r\n                );\r\n            });\r\n        }\r\n        return (\r\n            <section className={classnames(\"one-level-label-box\", this.props.sectionClassName, {'pick-up': this.props.isPickedUp})} ref=\"categoryMenu\">\r\n                <ul className={classnames(\"one-level-label-inner\", this.props.ulClassName)} ref=\"categorys\">\r\n                    {liDOM}\r\n                </ul>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { autobind } from 'core-decorators';\r\nimport Page from 'components/page';\r\n\r\nimport TabLabel from './components/tab';\r\nimport ScrollToLoad from 'components/scrollToLoad';\r\nimport BooksItem from 'components/books-item';\r\nimport { formatDate, locationTo } from 'components/util';\r\nimport { getBuyLists } from '../../actions/buy'\r\n\r\nconst firstTag = [\r\n  { \r\n    sign: '1',\r\n    labelName: '系列课',\r\n    type: 'channel'\r\n  },\r\n  { \r\n    sign: '2',\r\n    labelName: '话题',\r\n    type: 'topic'\r\n  },\r\n  { \r\n    sign: '3',\r\n    labelName: '听书',\r\n    type: 'book'\r\n  },\r\n  { \r\n    sign: '4',\r\n    labelName: '会员',\r\n    type:\"live\"\r\n  },\r\n  { \r\n    sign: '5',\r\n    labelName: '打卡',\r\n    type:\"checkin\"\r\n  },\r\n  { \r\n    sign: '6',\r\n    labelName: '赠礼',\r\n    type:\"gift\"\r\n  },\r\n  { \r\n    sign: '7',\r\n    labelName: '文件',\r\n    type:\"doc\"\r\n  },\r\n]\r\n\r\n@autobind\r\nclass BuyHistory extends Component {\r\n  state = {\r\n    nowFirstTagId: \"3\", // 当前选中标签id\r\n    type: this.props.location.query.type || 'book'\r\n  }\r\n  data = {\r\n    page: 1,\r\n    size: 20,\r\n    flag: false\r\n  }\r\n  componentDidMount(){\r\n    this.loadMoreCourse();\r\n  }\r\n  async loadMoreCourse(){\r\n    const { noneData, isNoMoreCourse } = this.props;\r\n    if(this.data.flag || noneData || isNoMoreCourse) return false;\r\n    this.data.flag = true;\r\n    const { type } = this.state;\r\n    const params = Object.assign(this.data,{ purchaseType:type });\r\n    await this.props.getBuyLists(params);\r\n    this.data.page += 1;\r\n    this.data.flag = false;\r\n  }\r\n  switchFirstTag(tagId) {\r\n    if (tagId == this.state.nowFirstTagId) return false;\r\n    const type = firstTag.filter((item) => item.sign === tagId)[0].type;\r\n    this.setState({\r\n      type: type\r\n    })\r\n    locationTo(`/live/entity/myPurchaseRecord.htm?type=${ type }`)\r\n    // this.setState({\r\n    //   isNoMoreCourse: false,\r\n    //   nowFirstTagId:tagId,\r\n    //   noneData: false,\r\n    // }, () => {\r\n\r\n    // });\r\n  }\r\n  goTopic(id){\r\n    console.log(`/wechat/page/topic-intro?topicId=${id}`)\r\n    locationTo(`/wechat/page/topic-intro?topicId=${id}`)\r\n  }\r\n  render() {\r\n    const { noneData, isNoMoreCourse, buyLists } = this.props;\r\n    const { nowFirstTagId } =  this.state;\r\n    return (\r\n      <Page title=\"我的购买记录\" className=\"buy-history-box\">\r\n        <div className=\"buy-menu\">\r\n          {/* <article className=\"two-level-label free-low-contain\">\r\n            <TabLabel \r\n              listInfo = {firstTag}\r\n              liClassName = \"free-low-f-menu-li\"\r\n              sectionClassName = \"free-low-f-menu-section\"\r\n              ulClassName = \"free-low-f-menu-ul\"\r\n              labelClickFunc = {this.switchFirstTag}\r\n              activeLabelSign = {nowFirstTagId}\r\n              region={'menu'}/>\r\n          </article> */}\r\n          <ul>\r\n            { firstTag.map((item, index) => (\r\n              <li onClick={ () =>  this.switchFirstTag(item.sign) } className={ nowFirstTagId === item.sign ? 'select' : '' }>\r\n                { item.labelName }\r\n              </li>\r\n            )) }\r\n          </ul>\r\n        </div>\r\n        <ScrollToLoad\r\n          className=\"buy-scroll\"\r\n          toBottomHeight={500}\r\n          noneOne={noneData}\r\n          loadNext={ this.loadMoreCourse }\r\n          noMore={ isNoMoreCourse }>\r\n          { buyLists.map((item, index) => (\r\n            <div key={index} className=\"buy-books-item\" onClick={ () => this.goTopic(item.businessId) }>\r\n              <BooksItem \r\n                name={item.name} \r\n                description={item.description}\r\n                iconUrl={ item.iconUrl }\r\n                learningNum={item.learningNum }\r\n                duration={ item.duration }\r\n                id={ item.businessId }\r\n                key={ index } />\r\n              <div className=\"buy-books-info\">\r\n                <h3>实付款：<span>￥{ (Number(item.amount)/100).toFixed(2) }</span>{ !!item.benifit && `（已优惠抵扣￥${(Number(item.benifit)/100).toFixed(2)}）` }</h3>\r\n                <p>购买时间：{ formatDate(item.payTime,'yyyy-MM-dd hh:mm:ss') }</p>\r\n              </div>\r\n            </div>\r\n          )) }\r\n        </ScrollToLoad>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function(state) {\r\n  return {\r\n    buyLists: state.buy.buyLists || [],\r\n    noneData: state.buy.noneData || false,\r\n    isNoMoreCourse: state.buy.isNoMoreCourse || false,\r\n  }\r\n};\r\n\r\nconst mapActionToProps = {\r\n  getBuyLists\r\n};\r\n\r\nmodule.exports = connect(mapStateToProps, mapActionToProps)(BuyHistory);"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;AACA;AACA;;;;;;AAAA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAKA;;;;AAzBA;AACA;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AAAA;AACA;AAHA;AACA;;;;;;AAKA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AAAA;AAKA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;;;;AA1IA;AACA;;;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AACA;AAFA;AAmBA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;;;;;;;ACvBA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AACA;AAOA;;;;;;;;;;;;;;;;;;AACA;AACA;AAAA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AAHA;AACA;;;;;;AAIA;AACA;AACA;;;;;;;;;;;;;AAEA;AACA;AAAA;;;;;AAAA;AACA;;AAAA;AACA;AACA;AAAA;AAAA;;AACA;AACA;;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAQA;AACA;AACA;AACA;AACA;AALA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AAAA;AAVA;AAmBA;;;;AA3FA;AACA;AA6FA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AADA;AAIA;;;;A","sourceRoot":""}